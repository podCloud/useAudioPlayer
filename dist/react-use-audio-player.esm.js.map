{"version":3,"file":"react-use-audio-player.esm.js","sources":["../src/audioPlayerState.ts","../src/context.ts","../src/AudioPlayerProvider.tsx","../src/useAudioPlayer.ts","../src/useAudioPosition.ts"],"sourcesContent":["export enum Actions {\n    START_LOAD,\n    ON_LOAD,\n    ON_PLAY,\n    ON_END,\n    ON_PAUSE,\n    ON_STOP,\n    ON_PLAY_ERROR,\n    ON_LOAD_ERROR\n}\n\ninterface BaseAction {\n    type: Actions\n}\n\ninterface ErrorAction extends BaseAction {\n    error: Error\n}\n\ninterface LoadAction extends BaseAction {\n    duration: number\n}\n\ntype Action = BaseAction | ErrorAction | LoadAction\n\nexport interface AudioPlayerState {\n    loading: boolean\n    playing: boolean\n    stopped: boolean\n    error: Error | null\n    duration: number\n    ready: boolean\n}\n\nexport const initialState: AudioPlayerState = {\n    loading: true,\n    playing: false,\n    stopped: true,\n    error: null,\n    duration: 0,\n    ready: false\n}\n\nexport function reducer(state: AudioPlayerState, action: Action) {\n    switch (action.type) {\n        case Actions.START_LOAD:\n            return {\n                ...state,\n                loading: true,\n                stopped: true,\n                ready: false,\n                error: null,\n                duration: 0\n            }\n        case Actions.ON_LOAD:\n            return {\n                ...state,\n                loading: false,\n                duration: (action as LoadAction).duration,\n                ready: true\n            }\n        case Actions.ON_PLAY:\n            return {\n                ...state,\n                playing: true,\n                stopped: false\n            }\n        case Actions.ON_STOP:\n        case Actions.ON_END:\n            return {\n                ...state,\n                stopped: true,\n                playing: false\n            }\n        case Actions.ON_PAUSE:\n            return {\n                ...state,\n                playing: false\n            }\n        case Actions.ON_PLAY_ERROR:\n            return {\n                ...state,\n                playing: false,\n                stopped: true,\n                error: (action as ErrorAction).error\n            }\n        case Actions.ON_LOAD_ERROR:\n            return {\n                ...state,\n                playing: false,\n                stopped: true,\n                loading: false,\n                error: (action as ErrorAction).error\n            }\n        default:\n            return state\n    }\n}\n","import React from \"react\"\nimport { AudioPlayer } from \"./types\"\n\nexport const AudioPlayerContext = React.createContext<AudioPlayer | null>(null)\n","import React, {\n    useState,\n    useCallback,\n    useEffect,\n    useRef,\n    useReducer,\n    useMemo\n} from \"react\"\nimport { Howl } from \"howler\"\nimport { initialState, reducer, Actions } from \"./audioPlayerState\"\nimport { AudioPlayerContext } from \"./context\"\nimport { AudioPlayer, AudioSrcProps } from \"./types\"\n\ninterface AudioPlayerProviderProps {\n    children: React.ReactNode\n    value?: AudioPlayer\n}\n\nexport function AudioPlayerProvider({\n    children,\n    value\n}: AudioPlayerProviderProps) {\n    const [player, setPlayer] = useState<Howl | null>(null)\n    const [\n        { loading, error, playing, stopped, duration, ready },\n        dispatch\n    ] = useReducer(reducer, initialState)\n\n    const playerRef = useRef<Howl>()\n\n    const constructHowl = useCallback(\n        ({ src, format, autoplay, ...howlOpts }: AudioSrcProps): Howl => {\n            return new Howl({\n                src,\n                format,\n                autoplay,\n                ...howlOpts\n            })\n        },\n        []\n    )\n\n    const load = useCallback(\n        ({ src, format, autoplay = false, ...howlOpts }: AudioSrcProps) => {\n            dispatch({ type: Actions.START_LOAD })\n\n            let wasPlaying = false\n            if (playerRef.current) {\n                // don't do anything if we're asked to reload the same source\n                // @ts-ignore the _src argument actually exists\n                if (playerRef.current._src === src) return\n                wasPlaying = playerRef.current.playing()\n                if (wasPlaying) {\n                    playerRef.current.stop()\n                    // remove event handlers from player that is about to be replaced\n                    playerRef.current.off()\n                    playerRef.current = undefined\n                }\n            }\n\n            // create a new player\n            const howl = constructHowl({\n                src,\n                format,\n                autoplay: wasPlaying || autoplay, // continues playing next song\n                ...howlOpts\n            })\n\n            // if this howl has already been loaded (cached) then fire the load action\n            // @ts-ignore _state exists\n            if (howl._state === \"loaded\") {\n                dispatch({ type: Actions.ON_LOAD, duration: howl.duration() })\n            }\n\n            howl.on(\n                \"load\",\n                () =>\n                    void dispatch({\n                        type: Actions.ON_LOAD,\n                        duration: howl.duration()\n                    })\n            )\n            howl.on(\"play\", () => void dispatch({ type: Actions.ON_PLAY }))\n            howl.on(\"end\", () => void dispatch({ type: Actions.ON_END }))\n            howl.on(\"pause\", () => void dispatch({ type: Actions.ON_PAUSE }))\n            howl.on(\"stop\", () => void dispatch({ type: Actions.ON_STOP }))\n            howl.on(\"playerror\", (_id, error) => {\n                dispatch({\n                    type: Actions.ON_PLAY_ERROR,\n                    error: new Error(\"[Play error] \" + error)\n                })\n            })\n            howl.on(\"loaderror\", (_id, error) => {\n                dispatch({\n                    type: Actions.ON_LOAD_ERROR,\n                    error: new Error(\"[Load error] \" + error)\n                })\n            })\n\n            setPlayer(howl)\n            playerRef.current = howl\n        },\n        [constructHowl]\n    )\n\n    useEffect(() => {\n        // unload the player on unmount\n        return () => {\n            if (playerRef.current) playerRef.current.unload()\n        }\n    }, [])\n\n    const contextValue: AudioPlayer = useMemo(() => {\n        return value\n            ? value\n            : {\n                  player,\n                  load,\n                  error,\n                  loading,\n                  playing,\n                  stopped,\n                  ready,\n                  duration\n              }\n    }, [loading, error, playing, stopped, load, value, player, ready, duration])\n\n    return (\n        <AudioPlayerContext.Provider value={contextValue}>\n            {children}\n        </AudioPlayerContext.Provider>\n    )\n}\n","import { useCallback, useContext, useEffect } from \"react\"\nimport { AudioPlayerContext } from \"./context\"\nimport { AudioPlayer, AudioSrcProps } from \"./types\"\n\nconst noop = () => {}\n\nexport type AudioPlayerControls = Omit<AudioPlayer, \"player\"> & {\n    play: Howl[\"play\"] | typeof noop\n    pause: Howl[\"pause\"] | typeof noop\n    stop: Howl[\"stop\"] | typeof noop\n    mute: Howl[\"mute\"] | typeof noop\n    seek: Howl[\"seek\"] | typeof noop\n    volume: Howl[\"volume\"] | typeof noop\n    togglePlayPause: () => void\n}\n\nexport const useAudioPlayer = (props?: AudioSrcProps): AudioPlayerControls => {\n    const { player, load, ...context } = useContext(AudioPlayerContext)!\n\n    const { src, format, autoplay } = props || {}\n\n    useEffect(() => {\n        // if useAudioPlayer is called without arguments\n        // don't do anything: the user will have access\n        // to the current context\n        if (!src) return\n        load({ src, format, autoplay })\n    }, [src, format, autoplay, load])\n\n    const togglePlayPause = useCallback(() => {\n        if (!player) return\n\n        if (player.playing()) {\n            player.pause()\n        } else {\n            player.play()\n        }\n    }, [player])\n\n    return {\n        ...context,\n        play: player ? player.play.bind(player) : noop,\n        pause: player ? player.pause.bind(player) : noop,\n        stop: player ? player.stop.bind(player) : noop,\n        mute: player ? player.mute.bind(player) : noop,\n        seek: player ? player.seek.bind(player) : noop,\n        volume: player ? player.volume.bind(player) : noop,\n        load,\n        togglePlayPause\n    }\n}\n","import { useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\"\nimport { AudioPlayerContext } from \"./context\"\nimport { useAudioPlayer, AudioPlayerControls } from \"./useAudioPlayer\"\n\ninterface UseAudioPositionConfig {\n    highRefreshRate?: boolean\n}\n\ninterface AudioPosition {\n    position: number\n    duration: number\n    seek: AudioPlayerControls[\"seek\"]\n}\n\n// gives current audio position state - updates in an animation frame loop for animating audio visualizations\nexport const useAudioPosition = (\n    config: UseAudioPositionConfig = {}\n): AudioPosition => {\n    const { highRefreshRate = false } = config\n    const { player, playing, stopped, duration } = useContext(\n        AudioPlayerContext\n    )!\n\n    const { seek } = useAudioPlayer()\n    const [position, setPosition] = useState(0)\n    const animationFrameRef = useRef<number>()\n\n    // sets position on player initialization and when the audio is stopped\n    useEffect(() => {\n        if (player) {\n            setPosition(player.seek() as number)\n        }\n    }, [player, stopped])\n\n    // updates position on a one second loop for low refresh rate default setting\n    useEffect(() => {\n        let timeout: number\n        if (!highRefreshRate && player && playing)\n            timeout = window.setInterval(\n                () => setPosition(player.seek() as number),\n                1000\n            )\n        return () => clearTimeout(timeout)\n    }, [highRefreshRate, player, playing])\n\n    // updates position on a 60fps loop for high refresh rate setting\n    useLayoutEffect(() => {\n        const animate = () => {\n            setPosition(player?.seek() as number)\n            animationFrameRef.current = requestAnimationFrame(animate)\n        }\n\n        // kick off a new animation cycle when the player is defined and starts playing\n        if (highRefreshRate && player && playing) {\n            animationFrameRef.current = requestAnimationFrame(animate)\n        }\n\n        return () => {\n            if (animationFrameRef.current) {\n                cancelAnimationFrame(animationFrameRef.current)\n            }\n        }\n    }, [highRefreshRate, player, playing])\n\n    return { position, duration, seek }\n}\n"],"names":["Actions","initialState","loading","playing","stopped","error","duration","ready","reducer","state","action","type","START_LOAD","ON_LOAD","ON_PLAY","ON_STOP","ON_END","ON_PAUSE","ON_PLAY_ERROR","ON_LOAD_ERROR","AudioPlayerContext","React","createContext","AudioPlayerProvider","children","value","useState","player","setPlayer","useReducer","dispatch","playerRef","useRef","constructHowl","useCallback","src","format","autoplay","howlOpts","Howl","load","wasPlaying","current","_src","stop","off","undefined","howl","_state","on","_id","Error","useEffect","unload","contextValue","useMemo","Provider","noop","useAudioPlayer","props","useContext","context","togglePlayPause","pause","play","bind","mute","seek","volume","useAudioPosition","config","highRefreshRate","position","setPosition","animationFrameRef","timeout","window","setInterval","clearTimeout","useLayoutEffect","animate","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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"}